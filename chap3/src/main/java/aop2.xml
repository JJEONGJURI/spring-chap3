<?xml version="1.0" encoding="UTF-8"?>
<!-- /chap3/src/main/java/aop2.xml -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop.xsd">
	<bean id="loggingAdvice" class="xml.LoggingAdvice" />
	<bean id="cacheAdvice" class="xml.ArticleCacheAdvice" />
	<aop:config>
		<aop:aspect id="loggingAspect" ref="loggingAdvice" order="3">
			<!-- aspect  : class 지정 -->
			<!-- pointcut :핵심메서드 -->
			<aop:pointcut id="publicMethod"
				expression="execution(public * xml..*(..))" /> <!-- 패키지 고정 -->
			<!-- xml 밑에있는 모든 public 메서드가 핵심 메서드임 -->
			<aop:before method="before" pointcut-ref="publicMethod" />
			<!-- public 메서드 시작 전 -->
			<aop:after-returning method="afterReturning" pointcut-ref="publicMethod" 
				returning="ret"/><!-- ret : 핵심메서드의 리턴값 -->
			<!-- 정상종료 후 -->			
			<aop:after-throwing method="afterThrowing" pointcut-ref="publicMethod" 
				throwing="ex"/>		
			<!-- ex: 발생된 예외 객체 // 오류났을 때 -->	
			<aop:after method="afterFinally" pointcut-ref="publicMethod" />
		</aop:aspect>	
		<aop:aspect id="cacheAspect" ref="cacheAdvice" order="2" >
			<aop:around method="cache" 
					pointcut="execution(public * *..ReadArticleService.*(..))" /> <!-- 클래스 고정 -->
			
		</aop:aspect>
	</aop:config>
 </beans>